// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/MuxiKeStack/bff/ioc"
	"github.com/MuxiKeStack/bff/pkg/ginx"
	"github.com/MuxiKeStack/bff/web"
	"github.com/MuxiKeStack/bff/web/evaluation"
	"github.com/MuxiKeStack/bff/web/search"
)

// Injectors from wire.go:

func InitWebServer() *ginx.Server {
	logger := ioc.InitLogger()
	cmdable := ioc.InitRedis()
	handler := ioc.InitJwtHandler(cmdable)
	client := ioc.InitEtcdClient()
	userServiceClient := ioc.InitUserClient(client)
	ccnuServiceClient := ioc.InitCCNUClient(client)
	gradeServiceClient := ioc.InitGradeClient(client)
	pointServiceClient := ioc.InitPointClient(client)
	userHandler := web.NewUserHandler(handler, userServiceClient, ccnuServiceClient, gradeServiceClient, pointServiceClient)
	courseServiceClient := ioc.InitCourseClient(client)
	evaluationServiceClient := ioc.InitEvaluationClient(client)
	tagServiceClient := ioc.InitTagClient(client)
	collectServiceClient := ioc.InitCollectClient(client)
	courseHandler := web.NewCourseHandler(handler, courseServiceClient, evaluationServiceClient, userServiceClient, tagServiceClient, logger, collectServiceClient)
	questionServiceClient := ioc.InitQuestionClient(client)
	answerServiceClient := ioc.InitAnswerClient(client)
	questionHandler := web.NewQuestionHandler(questionServiceClient, userServiceClient, answerServiceClient, logger)
	stanceServiceClient := ioc.InitStanceClient(client)
	commentServiceClient := ioc.InitCommentClient(client)
	evaluationHandler := evaluation.NewEvaluationHandler(evaluationServiceClient, tagServiceClient, stanceServiceClient, commentServiceClient)
	commentHandler := web.NewCommentHandler(commentServiceClient)
	searchServiceClient := ioc.InitSearchClient(client)
	searchHandler := search.NewSearchHandler(searchServiceClient, tagServiceClient, evaluationServiceClient)
	saramaClient := ioc.InitKafka()
	producer := ioc.InitProducer(saramaClient)
	gradeHandler := web.NewGradeHandler(gradeServiceClient, ccnuServiceClient, producer, handler)
	staticServiceClient := ioc.InitStaticClient(client)
	staticHandler := ioc.InitStaticHandler(staticServiceClient)
	answerHandler := web.NewAnswerHandler(answerServiceClient, courseServiceClient, questionServiceClient, commentServiceClient, stanceServiceClient)
	pointHandler := web.NewPointHandler(pointServiceClient)
	feedServiceClient := ioc.InitFeedClient(client)
	feedHandler := web.NewFeedHandler(feedServiceClient)
	putPolicy := ioc.InitPutPolicy()
	credentials := ioc.InitMac()
	tubeHandler := ioc.InitTubeHandler(putPolicy, credentials)
	server := ioc.InitGinServer(logger, handler, userHandler, courseHandler, questionHandler, evaluationHandler, commentHandler, searchHandler, gradeHandler, staticHandler, answerHandler, pointHandler, feedHandler, tubeHandler)
	return server
}
